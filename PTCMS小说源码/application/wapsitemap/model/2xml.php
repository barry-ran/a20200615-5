<?php
 class xmlModel { public function xml_encode($zym_105, $zym_12 = 'ptcms', $zym_14 = '', $zym_15 = 'utf-8') { if (is_array($zym_14)) { $zym_107 = array(); foreach ($zym_14 as $zym_16 => $zym_8) { $zym_107[] = "{$zym_16}=\"{$zym_8}\""; } $zym_14 = implode(' ', $zym_107); } $zym_14 = trim($zym_14); $zym_14 = empty($zym_14) ? '' : " {$zym_14}"; $zym_5 = "<?xml version=\"1.0\" encoding=\"{$zym_15}\"?>"; $zym_5 .= "<{$zym_12}{$zym_14}>"; $zym_5 .= $this->data_to_xml($zym_105); $zym_5 .= "</{$zym_12}>"; return preg_replace('/[\x00-\x1f]/', '', $zym_5); } protected function data_to_xml($zym_105, $zym_100 = '') { $zym_5 = ''; foreach ($zym_105 as $zym_16 => $zym_108) { if (is_numeric($zym_16)) { $zym_16 = $zym_100; } $zym_5 .= "<{$zym_16}>"; if (is_array($zym_108) || is_object($zym_108)) { $zym_106 = strlen("<{$zym_16}>"); $zym_104 = $this->data_to_xml($zym_108, $zym_16); if (strpos($zym_104, "<{$zym_16}>") === 0) { $zym_104 = substr($zym_104, $zym_106, -($zym_106 + 1)); } $zym_5 .= $zym_104; } elseif (strlen($zym_108) > 150 || preg_match('{[<>&\'|"]+}', $zym_108)) { $zym_5 .= '<![CDATA[' . $zym_108 . ']]>'; } else { $zym_5 .= $zym_108; } $zym_5 .= "</{$zym_16}>"; } return $zym_5; } }
?>